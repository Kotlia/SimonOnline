{"version":3,"sources":["js/lib/selectordie.js"],"names":["$","fn","selectOrDie","method","$defaults","customID","customClass","placeholder","placeholderOption","prefix","cycle","stripEmpty","links","linksExternal","size","tabIndex","onChange","noop","$_settings","$_sodKeysWhenClosed","$_sodFilterTimeout","$_sodViewportTimeout","_private","initSoD","options","extend","each","parent","hasClass","$select","$settingsId","data","$settingsClass","$settingsPrefix","$settingsPlaceholder","$settingsPlaceholderOption","$settingsCycle","$settingsLinks","$settingsLinksExternal","$settingsSize","parseInt","$settingsTabIndex","attr","$settingsStripEmpty","$selectTitle","prop","$selectDisabled","is","$sodPrefix","$sodHtml","$sodHeight","$sod","$sodListWrapper","$sodList","id","title","tabindex","html","insertAfter","isTouch","addClass","appendTo","i","$this","trim","text","remove","populateSoD","show","outerHeight","removeAttr","css","on","focusSod","triggerSod","optionClick","optionHover","keyboardUse","selectChange","document","e","preventDefault","focus","console","log","$option","$isPlaceholder","$sodPlaceholder","$sodPlaceholderOption","$sodLabel","find","$optionParent","$optionText","$optionValue","val","$optionCustomId","$optionCustomClass","$optionIsDisabled","$optionIsSelected","$optionLink","$optionLinkExternal","$optgroupLabel","append","blurSod","not","stopPropagation","$optionActive","$optionSelected","listScroll","checkViewport","clearTimeout","removeClass","get","lastChild","nodeValue","$sodOptions","$sodCycle","filter","$sodFilterHit","$optionNext","$optionCycle","which","prevAll","first","last","nextAll","click","String","fromCharCode","toLowerCase","indexOf","length","setTimeout","siblings","end","$clicked","closest","$optionDisabled","$optionOptgroup","$optionIndex","index","selected","change","call","window","location","href","open","$optionHasChanged","blur","off","$sodPosition","getBoundingClientRect","$sodListHeight","bottom","height","top","$scrollList","$scrollOption","error","scrollTop","navigator","MaxTouchPoints","msMaxTouchPoints","methods","destroy","unwrap","update","empty","disable","$value","nextUntil","enable","apply","Array","prototype","slice","arguments","jQuery"],"mappings":"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","file":"selectordie.342ba14b.js","sourceRoot":"..\\build","sourcesContent":["/* ===========================================================\r\n *\r\n *  Name:          selectordie.js\r\n *  Updated:       2014-10-11\r\n *  Version:       0.1.8\r\n *  Created by:    Per V @ Vst.mn\r\n *  What?:         The Select or Die JS\r\n *\r\n *  Copyright (c) 2014 Per Vestman\r\n *  Dual licensed under the MIT and GPL licenses.\r\n *\r\n *  To much comments in the code. Please, I know.\r\n *\r\n *  Oddny | Cogs 'n Kegs\r\n *\r\n * =========================================================== */\n;\n\n(function ($) {\n  \"use strict\";\n\n  $.fn.selectOrDie = function (method) {\n    var $defaults = {\n      customID: null,\n      // String  - \"\" by default - Adds an ID to the SoD\n      customClass: \"\",\n      // String  - \"\" by default - Adds a class to the SoD\n      placeholder: null,\n      // String  - \"\" by default - Adds a placeholder that will be shown before a selection has been made\n      placeholderOption: false,\n      // Boolean - false by default - Same as above, but it uses the first option in the <select> as a placeholder (and hides it from the list)\n      prefix: null,\n      // String  - \"\" by default - Adds a prefix that always will be shown before the selected value\n      cycle: false,\n      // Boolean  - false by default - Should keyboard cycle through options or not?\n      stripEmpty: false,\n      // Boolean  - false by default - Should empty <option>'s be stripped from the <select>\n      links: false,\n      // Boolean  - false by default - Should the options be treated as links?\n      linksExternal: false,\n      // Boolean  - false by default - Should the options be treated as links and open in a new window/tab?\n      size: 0,\n      // Integer  - 0 by default - The value set equals the amount of items before scroll is needed\n      tabIndex: 0,\n      // integer  - 0 by default\n      onChange: $.noop // Adds a callback function for when the SoD gets changed\n\n    },\n        $_settings = {},\n        $_sodKeysWhenClosed = false,\n        $_sodFilterTimeout,\n        $_sodViewportTimeout;\n    var _private = {\n      initSoD: function (options) {\n        $_settings = $.extend({}, $defaults, options);\n        return this.each(function () {\n          if (!$(this).parent().hasClass(\"sod_select\")) {\n            var $select = $(this),\n                $settingsId = $select.data(\"custom-id\") ? $select.data(\"custom-id\") : $_settings.customID,\n                $settingsClass = $select.data(\"custom-class\") ? $select.data(\"custom-class\") : $_settings.customClass,\n                $settingsPrefix = $select.data(\"prefix\") ? $select.data(\"prefix\") : $_settings.prefix,\n                $settingsPlaceholder = $select.data(\"placeholder\") ? $select.data(\"placeholder\") : $_settings.placeholder,\n                $settingsPlaceholderOption = $select.data(\"placeholder-option\") ? $select.data(\"placeholder-option\") : $_settings.placeholderOption,\n                $settingsCycle = $select.data(\"cycle\") ? $select.data(\"cycle\") : $_settings.cycle,\n                $settingsLinks = $select.data(\"links\") ? $select.data(\"links\") : $_settings.links,\n                $settingsLinksExternal = $select.data(\"links-external\") ? $select.data(\"links-external\") : $_settings.linksExternal,\n                $settingsSize = parseInt($select.data(\"size\")) ? $select.data(\"size\") : $_settings.size,\n                $settingsTabIndex = parseInt($select.data(\"tabindex\")) ? $select.data(\"tabindex\") : $_settings.tabIndex ? $_settings.tabIndex : $select.attr(\"tabindex\") ? $select.attr(\"tabindex\") : $_settings.tabIndex,\n                $settingsStripEmpty = $select.data(\"strip-empty\") ? $select.data(\"strip-empty\") : $_settings.stripEmpty,\n                $selectTitle = $select.prop(\"title\") ? $select.prop(\"title\") : null,\n                $selectDisabled = $select.is(\":disabled\") ? \" disabled\" : \"\",\n                $sodPrefix = \"\",\n                $sodHtml = \"\",\n                $sodHeight = 0,\n                $sod,\n                $sodListWrapper,\n                $sodList; // If there's a prefix defined\n\n            if ($settingsPrefix) {\n              $sodPrefix = \"<span class=\\\"sod_prefix\\\">\" + $settingsPrefix + \"</span> \";\n            } // If there's a placeholder defined\n\n\n            if ($settingsPlaceholder && !$settingsPrefix) {\n              $sodHtml += \"<span class=\\\"sod_label sod_placeholder\\\">\" + $settingsPlaceholder + \"</span>\";\n            } else {\n              $sodHtml += \"<span class=\\\"sod_label\\\">\" + $sodPrefix + \"</span>\";\n            } // Inserts a new element that will act like our new <select>\n\n\n            $sod = $(\"<span/>\", {\n              id: $settingsId,\n              \"class\": \"sod_select \" + $settingsClass + $selectDisabled,\n              title: $selectTitle,\n              tabindex: $settingsTabIndex,\n              html: $sodHtml,\n              \"data-cycle\": $settingsCycle,\n              \"data-links\": $settingsLinks,\n              \"data-links-external\": $settingsLinksExternal,\n              \"data-placeholder\": $settingsPlaceholder,\n              \"data-placeholder-option\": $settingsPlaceholderOption,\n              \"data-prefix\": $settingsPrefix,\n              \"data-filter\": \"\"\n            }).insertAfter(this); // If it's a touch device\n\n            if (_private.isTouch()) {\n              $sod.addClass(\"touch\");\n            } // Add a wrapper for the option list\n\n\n            $sodListWrapper = $(\"<span/>\", {\n              \"class\": \"sod_list_wrapper\"\n            }).appendTo($sod); // Inserts a <span> into our wrapper created above. It will host our <option>:s\n\n            $sodList = $(\"<span/>\", {\n              \"class\": \"sod_list\"\n            }).appendTo($sodListWrapper); // Inserts an option <span> for each <option>\n\n            $(\"option, optgroup\", $select).each(function (i) {\n              var $this = $(this);\n\n              if ($settingsStripEmpty && !$.trim($this.text())) {\n                // Strip empty <option>'s from the <select>\n                $this.remove();\n              } else if (i === 0 && $settingsPlaceholderOption && !$sodPrefix) _private.populateSoD($this, $sodList, $sod, true);else {\n                _private.populateSoD($this, $sodList, $sod, false);\n              }\n            }); // If the setting size is set, then add a max-height to the SoD\n\n            if ($settingsSize) {\n              // Show the SoD options\n              $sodListWrapper.show(); // Calculate a max-height\n\n              $(\".sod_option:lt(\" + $settingsSize + \")\", $sodList).each(function () {\n                $sodHeight += $(this).outerHeight();\n              }); // Hide the SoD list wrapper and set a \"max-height\" to the list itself\n\n              $sodListWrapper.removeAttr(\"style\");\n              $sodList.css({\n                \"max-height\": $sodHeight\n              });\n            } // Move the <select> into the SoD element\n\n\n            $select.appendTo($sod); // Bind events to the SoD\n\n            $sod.on(\"focusin\", _private.focusSod).on(\"click\", _private.triggerSod).on(\"click\", \".sod_option\", _private.optionClick).on(\"mousemove\", \".sod_option\", _private.optionHover).on(\"keydown\", _private.keyboardUse); // Bind change event to the <select>\n\n            $select.on(\"change\", _private.selectChange); // When a label for the native select is clicked we want to focus the SoD\n\n            $(document).on(\"click\", \"label[for='\" + $select.attr(\"id\") + \"']\", function (e) {\n              e.preventDefault();\n              $sod.focus();\n            });\n          } else {\n            console.log(\"Select or Die: It looks like the SoD already exists\");\n          }\n        });\n      },\n      // initSoD\n      populateSoD: function ($option, $sodList, $sod, $isPlaceholder) {\n        var $sodPlaceholder = $sod.data(\"placeholder\"),\n            $sodPlaceholderOption = $sod.data(\"placeholder-option\"),\n            $sodPrefix = $sod.data(\"prefix\"),\n            $sodLabel = $sod.find(\".sod_label\"),\n            $optionParent = $option.parent(),\n            $optionText = $option.text(),\n            $optionValue = $option.val(),\n            $optionCustomId = $option.data(\"custom-id\") ? $option.data(\"custom-id\") : null,\n            $optionCustomClass = $option.data(\"custom-class\") ? $option.data(\"custom-class\") : \"\",\n            $optionIsDisabled = $option.is(\":disabled\") ? \" disabled \" : \"\",\n            $optionIsSelected = $option.is(\":selected\") ? \" selected active \" : \"\",\n            $optionLink = $option.data(\"link\") ? \" link \" : \"\",\n            $optionLinkExternal = $option.data(\"link-external\") ? \" linkexternal\" : \"\",\n            $optgroupLabel = $option.prop(\"label\"); // Create <li> for each <option>\n\n        if ($option.is(\"option\")) {\n          // If <option>\n          $(\"<span/>\", {\n            \"class\": \"sod_option \" + $optionCustomClass + $optionIsDisabled + $optionIsSelected + $optionLink + $optionLinkExternal,\n            id: $optionCustomId,\n            title: $optionText,\n            html: $optionText,\n            \"data-value\": $optionValue\n          }).appendTo($sodList); // Set the SoD data-label (used in the blur event)\n\n          if ($isPlaceholder && !$sodPrefix) {\n            // Various things if the first option should be used as a placeholder\n            $sod.data(\"label\", $optionText);\n            $sod.data(\"placeholder\", $optionText);\n            $option.prop(\"disabled\", true);\n            $sodList.find(\".sod_option:last\").addClass(\"is-placeholder disabled\");\n\n            if ($optionIsSelected) {\n              $sodLabel.addClass(\"sod_placeholder\");\n            }\n          } else if ($optionIsSelected && $sodPlaceholder && !$sodPlaceholderOption && !$sodPrefix) {\n            // If the option is selected and the placeholder option is used\n            $sod.data(\"label\", $sodPlaceholder);\n          } else if ($optionIsSelected) {\n            // If the option is selected\n            $sod.data(\"label\", $optionText);\n          } // If selected and no placeholder is set, update label,\n          // added in v.0.1.8: if the placeholder-option is set we'll update the label\n\n\n          if ($optionIsSelected && !$sodPlaceholder || $optionIsSelected && $sodPlaceholderOption || $optionIsSelected && $sodPrefix) {\n            $sodLabel.append($optionText);\n          } // If child of an <optgroup>\n\n\n          if ($optionParent.is(\"optgroup\")) {\n            $sodList.find(\".sod_option:last\").addClass(\"groupchild\"); // If <optgroup> disabled\n\n            if ($optionParent.is(\":disabled\")) {\n              $sodList.find(\".sod_option:last\").addClass(\"disabled\");\n            }\n          }\n        } else {\n          // If <<optgroup>\n          $(\"<span/>\", {\n            \"class\": \"sod_option optgroup \" + $optionIsDisabled,\n            title: $optgroupLabel,\n            html: $optgroupLabel,\n            \"data-label\": $optgroupLabel\n          }).appendTo($sodList);\n        }\n      },\n      // populateSoD\n      focusSod: function () {\n        var $sod = $(this); // If not disabled we'll add focus (and blur other active SoD's)\n\n        if (!$sod.hasClass(\"disabled\")) {\n          _private.blurSod($(\".sod_select.focus\").not($sod));\n\n          $sod.addClass(\"focus\"); // Blur the SoD when clicking outside it\n\n          $(\"html\").on(\"click.sodBlur\", function () {\n            _private.blurSod($sod);\n          });\n        } else {\n          _private.blurSod($sod);\n        }\n      },\n      // focusSod\n      triggerSod: function (e) {\n        e.stopPropagation();\n        var $sod = $(this),\n            $sodList = $sod.find(\".sod_list\"),\n            $sodPlaceholder = $sod.data(\"placeholder\"),\n            $optionActive = $sod.find(\".active\"),\n            $optionSelected = $sod.find(\".selected\"); // Trigger the SoD if it's not disabled, already open or a touch device\n\n        if (!$sod.hasClass(\"disabled\") && !$sod.hasClass(\"open\") && !$sod.hasClass(\"touch\")) {\n          // Add the .open class to display list\n          $sod.addClass(\"open\"); // If a placeholder is set, then show it\n\n          if ($sodPlaceholder && !$sod.data(\"prefix\")) {\n            $sod.find(\".sod_label\").addClass(\"sod_placeholder\").html($sodPlaceholder);\n          } // Scroll list to selected item\n\n\n          _private.listScroll($sodList, $optionSelected); // Check if the option list fits in the viewport\n\n\n          _private.checkViewport($sod, $sodList);\n        } else {\n          // Clears viewport check timeout\n          clearTimeout($_sodViewportTimeout);\n          $sod.removeClass(\"open\"); // If a placeholder is set, make sure the placeholder text is removed if\n          // the user toggles the select using his mouse\n\n          if ($sodPlaceholder) {\n            $sod.find(\".sod_label\").get(0).lastChild.nodeValue = $optionActive.text();\n          }\n        }\n      },\n      // triggerSod\n      keyboardUse: function (e) {\n        var $sod = $(this),\n            $sodList = $sod.find(\".sod_list\"),\n            $sodOptions = $sod.find(\".sod_option\"),\n            $sodLabel = $sod.find(\".sod_label\"),\n            $sodCycle = $sod.data(\"cycle\"),\n            $optionActive = $sodOptions.filter(\".active\"),\n            $sodFilterHit,\n            $optionNext,\n            $optionCycle; // Highlight prev/next element if up/down key pressed\n\n        if (e.which > 36 && e.which < 41) {\n          // Set $optionNext and $optionCycle\n          if (e.which === 37 || e.which === 38) {\n            // Left/Up key\n            $optionNext = $optionActive.prevAll(\":not('.disabled, .optgroup')\").first();\n            $optionCycle = $sodOptions.not(\".disabled, .optgroup\").last();\n          } else if (e.which === 39 || e.which === 40) {\n            // Right/Down key\n            $optionNext = $optionActive.nextAll(\":not('.disabled, .optgroup')\").first();\n            $optionCycle = $sodOptions.not(\".disabled, .optgroup\").first();\n          } // If there's no option before/after and cycle is enabled\n\n\n          if (!$optionNext.hasClass(\"sod_option\") && $sodCycle) {\n            $optionNext = $optionCycle;\n          } // Add .active to the next option, update the label and scroll the list\n\n\n          if ($optionNext.hasClass(\"sod_option\") || $sodCycle) {\n            $optionActive.removeClass(\"active\");\n            $optionNext.addClass(\"active\");\n            $sodLabel.get(0).lastChild.nodeValue = $optionNext.text();\n\n            _private.listScroll($sodList, $optionNext); // If the user used his keys when the SoD was closed we'll\n            // update the $_sodKeysWhenClosed flag that we use in blurSod()\n\n\n            if (!$sod.hasClass(\"open\")) {\n              $_sodKeysWhenClosed = true; // $sod.data(\"closed-keys\", true);\n            }\n          } // Disables the up/down keys from scrolling the page\n\n\n          return false;\n        } else if (e.which === 13 || e.which === 32 && $sod.hasClass(\"open\") && ($sod.data(\"filter\")[0] === ' ' || $sod.data(\"filter\") === \"\")) {\n          // Enter key or space, simulate click() function\n          e.preventDefault();\n          $optionActive.click();\n        } else if (e.which === 32 && !$sod.hasClass(\"open\") && ($sod.data(\"filter\")[0] === ' ' || $sod.data(\"filter\") === \"\")) {\n          // Space bar, Opens the SoD if already closed\n          e.preventDefault();\n          $_sodKeysWhenClosed = false;\n          $sod.click();\n        } else if (e.which === 27) {\n          // Esc key, blur the SoD\n          _private.blurSod($sod);\n        } // \"Filter\" options list using keybaord based input\n\n\n        if (e.which !== 0) {\n          // Clears data-filter timeout\n          clearTimeout($_sodFilterTimeout); // Append the data-filter with typed character\n\n          $sod.data(\"filter\", $sod.data(\"filter\") + String.fromCharCode(e.which)); // Check for matches of the typed string\n\n          $sodFilterHit = $sodOptions.filter(function () {\n            return $(this).text().toLowerCase().indexOf($sod.data(\"filter\").toLowerCase()) === 0;\n          }).not(\".disabled, .optgroup\").first(); // If the typed value is a hit, then set it to active\n\n          if ($sodFilterHit.length) {\n            $optionActive.removeClass(\"active\");\n            $sodFilterHit.addClass(\"active\");\n\n            _private.listScroll($sodList, $sodFilterHit);\n\n            $sodLabel.get(0).lastChild.nodeValue = $sodFilterHit.text();\n\n            if (!$sod.hasClass(\"open\")) {\n              $_sodKeysWhenClosed = true;\n            }\n          } // Set a timeout to empty the data-filter\n\n\n          $_sodFilterTimeout = setTimeout(function () {\n            $sod.data(\"filter\", \"\");\n          }, 500);\n        }\n      },\n      // keyboardUse\n      optionHover: function () {\n        var $option = $(this); // Mousemove event on option to make the SoD behave just like a native select\n\n        if (!$option.hasClass(\"disabled\") && !$option.hasClass(\"optgroup\")) {\n          $option.siblings().removeClass(\"active\").end().addClass(\"active\");\n        }\n      },\n      // optionHover\n      optionClick: function (e) {\n        e.stopPropagation();\n        var $clicked = $(this),\n            $sod = $clicked.closest(\".sod_select\"),\n            $optionDisabled = $clicked.hasClass(\"disabled\"),\n            $optionOptgroup = $clicked.hasClass(\"optgroup\"),\n            $optionIndex = $sod.find(\".sod_option:not('.optgroup')\").index(this); // Fixes https://github.com/vestman/Select-or-Die/issues/8, thanks builtbylane\n\n        if ($sod.hasClass(\"touch\")) {\n          return;\n        } // If not disabled or optgroup\n\n\n        if (!$optionDisabled && !$optionOptgroup) {\n          $sod.find(\".selected, .sod_placeholder\").removeClass(\"selected sod_placeholder\");\n          $clicked.addClass(\"selected\");\n          $sod.find(\"select option\")[$optionIndex].selected = true;\n          $sod.find(\"select\").change();\n        } // Clear viewport check timeout\n\n\n        clearTimeout($_sodViewportTimeout); // Hide the list\n\n        $sod.removeClass(\"open\");\n      },\n      // optionClick\n      selectChange: function () {\n        var $select = $(this),\n            $optionSelected = $select.find(\":selected\"),\n            $optionText = $optionSelected.text(),\n            $sod = $select.closest(\".sod_select\");\n        $sod.find(\".sod_label\").get(0).lastChild.nodeValue = $optionText;\n        $sod.data(\"label\", $optionText); // Triggers the onChange callback\n\n        $_settings.onChange.call(this); // If $_settings.links, send the user to the URL\n\n        if (($sod.data(\"links\") || $optionSelected.data(\"link\")) && !$optionSelected.data(\"link-external\")) {\n          window.location.href = $optionSelected.val();\n        } else if ($sod.data(\"links-external\") || $optionSelected.data(\"link-external\")) {\n          window.open($optionSelected.val(), \"_blank\");\n        }\n      },\n      // selectChange\n      blurSod: function ($sod) {\n        if ($(\"body\").find($sod).length) {\n          var $sodLabel = $sod.data(\"label\"),\n              $sodPlaceholder = $sod.data(\"placeholder\"),\n              $optionActive = $sod.find(\".active\"),\n              $optionSelected = $sod.find(\".selected\"),\n              $optionHasChanged = false; // Clear viewport check timeout\n\n          clearTimeout($_sodViewportTimeout); // Check the $sod for changes. If the user has used his keys when the SoD was closed\n          // we'll set the currently active option to selected. If the user used his keys when\n          // the SoD was open but did NOT make a selection, then we'll restore the SoD\n\n          if ($_sodKeysWhenClosed && !$optionActive.hasClass(\"selected\")) {\n            $optionActive.click();\n            $optionHasChanged = true;\n          } else if (!$optionActive.hasClass(\"selected\")) {\n            $optionActive.removeClass(\"active\");\n            $optionSelected.addClass(\"active\");\n          }\n\n          if (!$optionHasChanged && $sodPlaceholder) {\n            $sod.find(\".sod_label\").get(0).lastChild.nodeValue = $optionSelected.text();\n          } else if (!$optionHasChanged) {\n            $sod.find(\".sod_label\").get(0).lastChild.nodeValue = $sodLabel;\n          } // Reset the flag indicating whether the user has used his arrow keys when the SoD\n          // was closed or not\n\n\n          $_sodKeysWhenClosed = false; // Remove open/focus class\n\n          $sod.removeClass(\"open focus\"); // Blur the SOD\n\n          $sod.blur(); // Unbind the\n\n          $(\"html\").off(\".sodBlur\");\n        }\n      },\n      // blurSod\n      checkViewport: function ($sod, $sodList) {\n        var $sodPosition = $sod[0].getBoundingClientRect(),\n            $sodListHeight = $sodList.outerHeight(); // If the list is below the viewport AND fits above, then show it above\n\n        if ($sodPosition.bottom + $sodListHeight + 10 > $(window).height() && $sodPosition.top - $sodListHeight > 10) {\n          $sod.addClass(\"above\");\n        } else {\n          $sod.removeClass(\"above\");\n        } // This was fun, lets do it again and again.\n\n\n        $_sodViewportTimeout = setTimeout(function () {\n          _private.checkViewport($sod, $sodList);\n        }, 200);\n      },\n      // checkViewport\n      listScroll: function ($sodList, $option) {\n        var $scrollList = $sodList[0].getBoundingClientRect(); // getBoundingClientRect FTW!\n\n        var $scrollOption;\n\n        try {\n          $scrollOption = $option[0].getBoundingClientRect();\n        } catch (error) {\n          $scrollOption = 0;\n        } // Scroll list up and down\n\n\n        if ($scrollList.top > $scrollOption.top) {\n          $sodList.scrollTop($sodList.scrollTop() - $scrollList.top + $scrollOption.top);\n        } else if ($scrollList.bottom < $scrollOption.bottom) {\n          $sodList.scrollTop($sodList.scrollTop() - $scrollList.bottom + $scrollOption.bottom);\n        }\n      },\n      // listScroll\n      isTouch: function () {\n        return \"ontouchstart\" in window || navigator.MaxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\n      } // isTouch\n\n    };\n    var methods = {\n      destroy: function () {\n        return this.each(function () {\n          var $select = $(this),\n              $sod = $select.parent(); // Destroy the SoD\n\n          if ($sod.hasClass(\"sod_select\")) {\n            // Unbind the change event on the real <select>\n            $select.off(\"change\"); // Restore DOM\n\n            $sod.find(\"span\").remove();\n            $select.unwrap();\n          } else {\n            console.log(\"Select or Die: There's no SoD to destroy\");\n          }\n        });\n      },\n      // destroy\n      update: function () {\n        return this.each(function () {\n          var $select = $(this),\n              $sod = $select.parent(),\n              $sodList = $sod.find(\".sod_list:first\"); // Check for the SoD\n\n          if ($sod.hasClass(\"sod_select\")) {\n            // Empty current list of options in faux <select>\n            $sodList.empty(); // Clear the label (but keep prefix)\n\n            $sod.find(\".sod_label\").get(0).lastChild.nodeValue = \"\"; // Disable the SoD if the select is disabled\n\n            if ($select.is(\":disabled\")) {\n              $sod.addClass(\"disabled\");\n            } // Inserts a <span class=\"sod_option\"> for each <option>\n\n\n            $(\"option, optgroup\", $select).each(function () {\n              _private.populateSoD($(this), $sodList, $sod);\n            });\n          } else {\n            console.log(\"Select or Die: There's no SoD to update\");\n          }\n        });\n      },\n      // update\n      disable: function ($value) {\n        return this.each(function () {\n          var $select = $(this),\n              $sod = $select.parent(); // Check for the SoD\n\n          if ($sod.hasClass(\"sod_select\")) {\n            if (typeof $value !== \"undefined\") {\n              // Disable option/optgroup\n              // Disables the option (and possible children if optgroup) in the SoD\n              $sod.find(\".sod_list:first .sod_option[data-value='\" + $value + \"']\").addClass(\"disabled\");\n              $sod.find(\".sod_list:first .sod_option[data-label='\" + $value + \"']\").nextUntil(\":not(.groupchild)\").addClass(\"disabled\"); // Disables the option/optgroup in the real <select>\n\n              $(\"option[value='\" + $value + \"'], optgroup[label='\" + $value + \"']\", this).prop(\"disabled\", true);\n            } else if ($sod.hasClass(\"sod_select\")) {\n              // Disable select/SoD\n              $sod.addClass(\"disabled\");\n              $select.prop(\"disabled\", true);\n            }\n          } else {\n            console.log(\"Select or Die: There's no SoD to disable\");\n          }\n        });\n      },\n      // disable\n      enable: function ($value) {\n        return this.each(function () {\n          var $select = $(this),\n              $sod = $select.parent(); // Check for the SoD\n\n          if ($sod.hasClass(\"sod_select\")) {\n            if (typeof $value !== \"undefined\") {\n              // Enable option/optgroup\n              // Enables the option (and possible children if optgroup) in the SoD\n              $sod.find(\".sod_list:first .sod_option[data-value='\" + $value + \"']\").removeClass(\"disabled\");\n              $sod.find(\".sod_list:first .sod_option[data-label='\" + $value + \"']\").nextUntil(\":not(.groupchild)\").removeClass(\"disabled\"); // Enables the option in the real <select>\n\n              $(\"option[value='\" + $value + \"'], optgroup[label='\" + $value + \"']\", this).prop(\"disabled\", false);\n            } else if ($sod.hasClass(\"sod_select\")) {\n              // Enable select/SoD\n              $sod.removeClass(\"disabled\");\n              $select.prop(\"disabled\", false);\n            }\n          } else {\n            console.log(\"Select or Die: There's no SoD to enable\");\n          }\n        });\n      } // enable\n\n    };\n\n    if (methods[method]) {\n      return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (typeof method === \"object\" || !method) {\n      return _private.initSoD.apply(this, arguments);\n    } else {\n      $.error(\"Select or Die: Oh no! No such method \\\"\" + method + \"\\\" for the SoD instance\");\n    }\n  };\n})(jQuery);"]}